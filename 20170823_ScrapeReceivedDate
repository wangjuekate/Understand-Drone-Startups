#download first file
#get the receive date
import smtplib
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
from pprint import pprint
from xlrd import open_workbook
import csv
from selenium.common.exceptions import NoSuchElementException
from cStringIO import StringIO
import re

from pdfminer.layout import LAParams
from PyPDF2 import PdfFileWriter, PdfFileReader
from pdfminer.pdfpage import PDFPage
from bs4 import BeautifulSoup
import urllib2
import cookielib
import urllib
import PyPDF2
import dateutil.parser
from selenium import webdriver
from selenium.webdriver.firefox.firefox_profile import FirefoxProfile
import time
import json
import urllib2
import requests
from selenium.webdriver.common.keys import Keys
from datetime import datetime
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import NoSuchElementException
import csv
from selenium.common.exceptions import NoSuchElementException
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
from pprint import pprint
from xlrd import open_workbook

from selenium.common.exceptions import NoSuchElementException
import errno
import shutil
import os, sys
import win32com.client
shell = win32com.client.Dispatch("WScript.Shell")


address="2015-6314"
#preferences set the dir and make sure the application/octet-stream will be asked anyway, so no need to set that
profile = webdriver.FirefoxProfile()
profile.set_preference("browser.download.folderList", 2)
profile.set_preference("browser.download.dir", "Folder")
profile.set_preference("browser.helperApps.alwaysAsk.force", False)

browser = webdriver.Firefox(profile)
browser.get('http://www.regulations.gov/#!documentDetail;D=FAA-' + address + '-0001')
time.sleep(3)
Button = browser.find_element_by_xpath('//div[@class="GIY1LSJE1D"]/div[@class="GIY1LSJA1D floatLeft"]//a').click()
time.sleep(3)
#use default enter to solve the downloading problem
shell.SendKeys("{ENTER}", 0)
time.sleep(2)
rootpath = 'C:\Users\wang547\Downloads\Containdownload'
#find the recent downloaded file
filelist = [os.path.join(rootpath, f) for f in os.listdir(rootpath)]
filelist = [f for f in filelist if os.path.isfile(f)]
newest = max(filelist, key=lambda x: os.stat(x).st_mtime)
print newest
#rename the file with the right address, if download is not succesful, it could overwrite prior files
os.rename(newest,'C:/Users/wang547/Downloads/Containdownload/'+address + '-0001.pdf')
